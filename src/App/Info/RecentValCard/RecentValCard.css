/* File: src/App/App/Info/RecentValues/RecentValCard.css */
/* (Adjust the path to match your project if different) */

/* Wrapper & card */
.recent-values-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative; /* enables absolute positioning for arrows */
  --arrow-y-nudge: 40px;
  --arrow-opacity: 0.4;        /* default transparency */
  --arrow-opacity-hover: 1;     /* on hover/focus */
}
a/* File: src/App/Info/RecentValues/RecentValCard.css */

/* ──────────────────────────
   Wrapper & design tokens
   ────────────────────────── */
.recent-values-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;        /* enables absolute positioning for arrows */
  padding: 1rem;

  /* Tweakable knobs */
  --arrow-y-nudge: 40px;     /* move arrows down/up (+ = lower) */
  --arrow-size: 40px;        /* icon size */
  --arrow-offset-x: -10px;   /* pull arrows inward/outward */
  --arrow-opacity: 0.6;      /* idle opacity for both arrows */
  --arrow-opacity-hover: 1;  /* hover/focus opacity */

  --gaugeTopPad: 8px;
  --gaugeMaxHTop: 180px;
}

/* ──────────────────────────
   Card
   ────────────────────────── */
.card.recent-values-card {
  border: none !important;
  box-shadow: none !important;
  background-color: transparent !important;
}

.recent-values-card .card-body {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;      /* stack content top-to-bottom */
  justify-content: flex-start; /* don’t stretch to fill tall space */
  gap: 0.35rem;
  padding: 0.5rem;
}

/* ──────────────────────────
   Gauge area
   ────────────────────────── */
.recent-values-card .gauge-section {
  width: 100%;
  padding-top: var(--gaugeTopPad);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  gap: 0.35rem;
  flex: 1 1 auto;
  min-height: 0;
}

/* Box that controls the dial size */
.recent-values-card .gauge-box {
  width: 100%;
  aspect-ratio: 2 / 1;           /* semicircle */
  min-height: 120px;             /* lower this if needed */
  max-height: var(--gaugeMaxHTop);
  flex: 0 0 auto;
}

/* Make the SVG fill the box and keep labels visible */
.recent-values-card .gauge-box svg,
.recent-values-card .gauge-box .gauge-svg {
  width: 100% !important;
  height: 100% !important;
  overflow: visible;
  display: block;
}

/* ──────────────────────────
   Arrows (single source of truth)
   ────────────────────────── */
.arrow-button {
  position: absolute;
  top: calc(50% + var(--arrow-y-nudge)); /* nudge below center */
  transform: translateY(-50%);
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 0.5rem;

  display: flex;
  align-items: center;
  justify-content: center;

  /* Control opacity at the container level so L/R are identical
     regardless of internal SVG markup differences */
  opacity: var(--arrow-opacity);
  transition: opacity 120ms ease;

  z-index: 10;
}

.arrow-button:hover,
.arrow-button:focus-visible {
  opacity: var(--arrow-opacity-hover);
}

.arrow-button.left  { left:  var(--arrow-offset-x); }
.arrow-button.right { right: var(--arrow-offset-x); }

/* Size the actual icon (works whether it's <svg> or an icon component) */
.arrow-button svg {
  width: var(--arrow-size);
  height: var(--arrow-size);
}

/* Optional: ensure icon color follows current text color
   (doesn't touch opacity, so still consistent) */
.arrow-button svg {
  fill: currentColor;
  stroke: currentColor;
}

/* ──────────────────────────
   Timestamp
   ────────────────────────── */
.latest-timestamp {
  text-align: center;
  font-size: 0.65rem;
  line-height: 0.9;
  color: #6b7280; /* subtle gray */
  margin-top: 0.2rem;
}

@media (prefers-color-scheme: dark) {
  .latest-timestamp {
    color: #9ca3af; /* lighter gray for dark mode */
  }
}

/* ──────────────────────────
   Optional: button style (if used elsewhere in the card)
   ────────────────────────── */
.variable-button {
  padding: 0.3rem 0.6rem;
  font-size: 0.85rem;
  border-radius: 8px;
  border: none;
  background-color: #0066cc;
  color: white;
  cursor: pointer;
  transition: background-color 0.3s ease;
  font-weight: 500;
}
.variable-button:hover { background-color: #005bb5; }


.card.recent-values-card {
  border: none !important;
  box-shadow: none !important;
  background-color: transparent !important;
}

.recent-values-card .card-body {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;     /* stack content top-to-bottom */
  justify-content: flex-start;/* don’t stretch to fill tall space */
  gap: 0.35rem;
  padding: 0.5rem;
}

/* Gauge area */
.recent-values-card .gauge-section {
  width: 100%;
  padding-top: var(--gaugeTopPad, 8px);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;/* File: src/App/Info/RecentValues/RecentValCard.css */

/* Wrapper & card */
.recent-values-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem;
  position: relative; /* enables absolute positioning for arrows */
}

.card.recent-values-card {
  border: none !important;
  box-shadow: none !important;
  background-color: transparent !important;
}

.recent-values-card .card-body {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;     /* stack content top-to-bottom */
  justify-content: flex-start;/* don’t stretch to fill tall space */
  gap: 0.35rem;
  padding: 0.5rem;
}

/* Gauge area */
.recent-values-card .gauge-section {
  width: 100%;
  padding-top: var(--gaugeTopPad, 8px);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  gap: 0.35rem;
  flex: 1 1 auto;
  min-height: 0;
}

/* Box that controls the dial size */
.recent-values-card .gauge-box {
  width: 100%;
  aspect-ratio: 2 / 1;                /* semicircle space */
  min-height: 100px;                  /* lower floor so the cap can shrink it */
  max-height: var(--gaugeMaxHTop, 170px);
  flex: 0 0 auto;                     /* don’t grow to fill leftovers */
}

/* Make the SVG fill the box and keep labels visible */
.recent-values-card .gauge-box svg,
.recent-values-card .gauge-box .gauge-svg {
  width: 100% !important;
  height: 100% !important;
  overflow: visible;
  display: block;
}

/* Arrow buttons (left/right nav) */
.arrow-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 0.5rem;
  z-index: 10;
}
.arrow-button.left  { left: -10px; }
.arrow-button.right { right: -10px; }
.arrow-button svg   { width: 40px; height: 40px; }

  gap: 0.35rem;
  flex: 1 1 auto;
  min-height: 0;
}

/* Box that controls the dial size */
.recent-values-card .gauge-box {
  width: 100%;
  aspect-ratio: 2 / 1;
  min-height: 120px;                   /* you can lower this if needed */
  max-height: var(--gaugeMaxHTop, 180px);
  flex: 0 0 auto;
}

/* Make the SVG fill the box and keep labels visible */
.recent-values-card .gauge-box .gauge-svg {
  width: 100% !important;
  height: 100% !important;
  overflow: visible;
  display: block;
}


/* Buttons (if used) */
.variable-button {
  padding: 0.3rem 0.6rem;
  font-size: 0.85rem;
  border-radius: 8px;
  border: none;
  background-color: #0066cc;
  color: white;
  cursor: pointer;
  transition: background-color 0.3s ease;
  font-weight: 500;
}
.variable-button:hover { background-color: #005bb5; }

/* Arrow buttons (left/right nav) */
.arrow-button {
  position: absolute;
  top: calc(50% + var(--arrow-y-nudge)); /* ⬅️ moved slightly below vertical center */
  transform: translateY(-50%);
  z-index: 2; /* keep on top of the card */
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}
.arrow-button.left  { left: -10px; }
.arrow-button.right { right: -10px; }
.arrow-button svg   { width: 40px; height: 40px; }

/* Fade just the icon if it's an SVG */
.arrow-button svg {
  opacity: var(--arrow-opacity, 0.6);
  transition: opacity 120ms ease;
}

/* Hover/focus to full opacity */
.arrow-button:hover svg,
.arrow-button:focus-visible svg {
  opacity: var(--arrow-opacity-hover, 1);
}

/* Fallback: if the arrow is not an SVG (e.g., <img> or an icon component) */
.arrow-button > * {
  opacity: var(--arrow-opacity, 0.6);
  transition: opacity 120ms ease;
}

.arrow-button:hover > *,
.arrow-button:focus-visible > * {
  opacity: var(--arrow-opacity-hover, 1);
}


/* Time Stamp */

.latest-timestamp {
  text-align: center;
  font-size: 0.65rem;
  line-height: .8;
  color: #6b7280; /* subtle gray */
  margin-top: 0.2rem;
}

@media (prefers-color-scheme: dark) {
  .latest-timestamp {
    color: #9ca3af; /* lighter gray for dark mode */
  }
}

